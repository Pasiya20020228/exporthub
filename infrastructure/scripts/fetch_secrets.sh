#!/usr/bin/env bash
set -euo pipefail

# -----------------------------------------------------------------------------
# Fetch secrets from AWS SSM Parameter Store and render them into a .env file.
# This script expects the AWS CLI to be installed and authenticated.
#
# Usage:
#   ./infrastructure/scripts/fetch_secrets.sh <environment> <output-file>
# Example:
#   ./infrastructure/scripts/fetch_secrets.sh production backend/.env
# -----------------------------------------------------------------------------

ENVIRONMENT="${1:-}"
OUTPUT_FILE="${2:-}"

if [[ -z "${ENVIRONMENT}" || -z "${OUTPUT_FILE}" ]]; then
  echo "Usage: $0 <environment> <output-file>" >&2
  exit 1
fi

: "${AWS_REGION:?AWS_REGION must be set, e.g. us-east-1}"
: "${AWS_SSM_PARAMETER_PATH:?AWS_SSM_PARAMETER_PATH must be set, e.g. /exporthub/}"

PARAMETER_PATH="${AWS_SSM_PARAMETER_PATH%/}/${ENVIRONMENT}"

echo "Fetching parameters from ${PARAMETER_PATH} in region ${AWS_REGION}..." >&2

tmpfile="$(mktemp)"
trap 'rm -f "${tmpfile}"' EXIT

aws ssm get-parameters-by-path \
  --region "${AWS_REGION}" \
  --path "${PARAMETER_PATH}" \
  --with-decryption \
  --output text \
  --query 'Parameters[*].[Name,Value]' > "${tmpfile}"

mkdir -p "$(dirname "${OUTPUT_FILE}")"

{
  echo "# Generated by fetch_secrets.sh on $(date --iso-8601=seconds)"
  while read -r name value; do
    key="$(basename "${name}")"
    echo "${key}=${value}"
  done < "${tmpfile}"
} > "${OUTPUT_FILE}"

echo "Wrote secrets to ${OUTPUT_FILE}" >&2
